dados <- read.csv(arquivo, header = TRUE, stringsAsFactors = FALSE)
arquivo <- "caso.csv"
dados <- read.csv(arquivo, header = TRUE, stringsAsFactors = FALSE)
library(readr)
caso <- read_csv("~/Downloads/brasil IO - covid/caso.csv")
View(caso)
dados <- dados[dados$state == "RJ" & dados$place_type == "city" & dados$city != "Importados/Indefinidos", ]
dados <- caso
caso <- NULL
dados <- dados[dados$state == "RJ" & dados$place_type == "city" & dados$city != "Importados/Indefinidos", ]
library("ggplot2")
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal(base_size=20)
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal(base_size=20)
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal(base_size=20)
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "date", y = "mortes") +
theme_minimal(base_size=20)
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal(base_size=20)
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes")
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes")
arquivo <- "caso.csv"
if (! file.exists(arquivo)) {
url <- "https://data.brasil.io/dataset/covid19/caso.csv.gz"
download.file(url, destfile = arquivo, method = "curl")
untar('caso.csv.gz')
}
setwd("/home/castro/Downloads/brasil IO - covid")
dados <- read.csv(arquivo, header = TRUE,stringsAsFactors = FALSE)
head(dados)
tail(dados)
str(dados)
summary(dados)
dados <- dados[dados$state == "RJ" & dados$place_type == "city", ]
any(is.na(dados))
colSums(is.na(dados))
dados[is.na(dados$estimated_population), ]
dados <- dados[dados$city != "Importados/Indefinidos", ]
any(is.na(dados))
colSums(is.na(dados))
dados[is.na(dados$confirmed_per_100k_inhabitants), ]
nrow(dados[is.na(dados$confirmed_per_100k_inhabitants), ]) == nrow(dados[dados$confirmed == 0, ])
dados[dados$deaths == max(dados$deaths), ]
View(dados)
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme(legend.title = element_blank()) .
library("ggplot2")
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme(legend.title = element_blank()) .
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme(legend.title = element_blank())
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal(legend. position = "none")
library("ggplot2")
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal(legend.position = "none")
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city), show.legend = FALSE) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal()
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city), show.legend = FALSE) +
geom_line(aes(color=city), show.legend = FALSE) +
labs(x = "data", y = "mortes") +
theme_minimal()
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city), show.legend = FALSE) +
labs(x = "data", y = "mortes") +
theme_minimal()
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city), show.legend = FALSE) +
geom_line(aes(color=city), show.legend = FALSE) +
labs(x = "data", y = "mortes") +
theme_minimal()
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city), show.legend = FALSE) +
geom_line(aes(color=city), show.legend = FALSE) +
#  scale_x_discrete(name, breaks, labels, limits) +
labs(x = "data", y = "mortes") +
theme_minimal()
ggplot(dados, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city), show.legend = FALSE) +
geom_line(aes(color=city), show.legend = FALSE) +
#  scale_x_discrete(name, breaks, labels, limits) +
labs(x = "data", y = "mortes") +
theme_minimal()
temp <- dados[dados$city %in% c("Japeri", "Resende", "Itatiaia", "Paraty"), ]
ggplot(temp, aes(x=date, y=deaths, group=city)) +
geom_point(aes(color=city)) +
geom_line(aes(color=city)) +
labs(x = "data", y = "mortes") +
theme_minimal()
View(dados)
temp <- dados[dados$city == "Resende", ]
View(temp)
temp$deaths_day <- 0
View(temp)
municipios <- sort(unique(dados$city))
dados$deaths_day <- 0
municipios <- sort(unique(dados$city))
for (municipio in municipios) {
indices <- sort(dados[dados$city == municipio, "order_for_place"])
acumulado <- 0
for (indice in indices) {
mortes_no_dia <- dados[dados$city == municipio & dados$order_for_place == indice, "deaths"] - acumulado
dados[dados$city == municipio & dados$order_for_place == indice, "deaths_day"] <- mortes_no_dia
acumulado <- acumulado + mortes_no_dia
}
}
View(dados)
any(dados$deaths_day < 0)
dados[dados$deaths_day < 0,]
View(dados)
View(dados)
any(dados$deaths_day < 0)
dados[dados$deaths_day < 0,]
any(dados$deaths_day < 0)
dados[dados$deaths_day < 0,]
dados[dados$deaths_day < 0,]
dados[dados$city == "Araruama" & dados$order_for_place %in% c(64, 65, 66, 67),]
dados[dados$city == "Araruama" & dados$order_for_place %in% c(64, 65, 66, 67), c(1,3,6,7,14)]
dados[dados$deaths_day < 0, "deaths_day"] <- 0
min(dados$deaths_day)
max(dados$deaths_day)
View(dados)
dados <- dados[ , c(1,3,14)]
municipios <- unique(dados$city)
datas_ordenadas <- as.character(sort(unique(dados$date)))
linhas <- length(datas_ordenadas)
colunas <- length(municipios)
D <- array(0, dim=c(linhas, colunas))
rownames(D) <- datas_ordenadas
colnames(D) <- municipios
View(D)
View(D)
View(dados)
for (municipio in municipios) {
## percorre as datas registrando o valor daquele municipio para aquela data
for (data in datas_ordenadas) {
dado <- 0
registro <- dados[dados$city==municipio & dados$date == data, ]
if (nrow(registro) > 0) {
dado <- dados[dados$city==municipio & dados$date == data, 3]
}
D[data, municipio] <- dado
}
}
View(D)
arquivo <- "caso.csv"
setwd("/home/castro/Downloads/brasil IO - covid")
dados <- read.csv(arquivo, header = TRUE,stringsAsFactors = FALSE)
dados <- dados[dados$state == "RJ" & dados$place_type == "city", ]
View(dados)
write.csv(dados, casos.csv, row.names = FALSE)
write.csv(dados, "casos.csv", row.names = FALSE)
